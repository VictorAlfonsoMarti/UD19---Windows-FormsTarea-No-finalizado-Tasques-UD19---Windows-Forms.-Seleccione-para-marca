<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAX80lEQVR4Xu3dC5QddX0HcMJTKCgUFeop
        rQpabEWNgEgfnsXdO5MNEQ7UVCnlmULLOWA9VsvjoNOZ2SQEQiQRLDkVUAq1bAtkd/5zQ7KGgEKCEiEi
        r4AceRNC3uS1yYbt77+5HDZzv9nX/c+dx/97z/kknq9kd/6//2PvnZ35z179/f1EZCkYEpEdYEhEdoAh
        EdkBhkRkBxgSkR1gSER2gCER2QGGRGQHGBKRHWBIRHaAIRHZAYZEZAcYEpEdYEhEdoAhEdkBhkRkBxgS
        kR1gSER2gCER2QGGRGQHGBKRHWBIxdQ6tesIJ4hPmhCqM10/usgJoysrvprpBuo2ybudQPUM8KOl8vey
        3ezKdv3/8t/qf6P/rf4a+mvpr6m/tv4e6HtTMcGQ8muS133QhKD7RMdXU1w/vkEmbFwJ1FPy9xbR3yRb
        at8zrh3DhZWO+ISTZ3UeiI6Z8guGlA+TOzv3aQuq451QXSaT7KfyU3mF/N0n0KTMAzm26Fn5W441urTi
        xZ/TbUBto3yAIWXD87y9B366B/HVMtnvk4m0cdDkKqoNYr68Y7hKv0vQbURtp2zAkJpnohcfWQni82WS
        6J/wbw2aOGW1St4l3CnvEM7l+YTswZDS1R5Wj3b86N9rn6PRJLHGQA2kFq2e+jiqFaULhmRei9d58MCJ
        u0D9TAZ+nj/HZ0XXZKHrRxfoE52ohmQeDMkcN1RtMrA7xdbaQKfh6Vp16tqhmpI5MKTGTPY699efcWUQ
        PzJoUNPYLJGPCf+ga4pqTY2BIY2N0zHvKCeIZsugXZ8YxNQ4qWk0u92r/jGqPY0NDGl0XK/rGPmJ/58y
        SPk2P336gqe5PGloBgxpZCaE8/9MBqP+fL+zNjipeXTNO1u9+JOob2hkYEhD029DHV/9UAZg76ABSdnY
        5vrRjRWv6yOor2hoMCTstBldh9Q+429PDELKnizG0WzdR6jvCIMh7U7+GFc7q/9aYtBR/ryq+0r3GepL
        2h0M6T2VMPqEDCp9mywabJRf8/UVl6hP6T0wJH3l3uL3VXx1jQwkvt0vru26D9vnVA9AfUxcAKCKH7XK
        4Hk+MZiouJ5zfXUK6mvbwdBW+ieFDJbrBK/VLx+9V8F0XlG4OxjayPW6Py+D5OnEoKGS0Xcf6o1K0Biw
        EQxtones0bejyuDgZ317bHNDdTk3J7F8AWjx7j20tlkmGiRUfve0e9X3o7FhCxjaQO9wKwPglcSAIOvE
        L+tt2NAYsQEMy25gy2x5G1g/GMhSW/VmLWislB0My0p/5hvY6x4PArKcvmZABopVVxDCsIz0Zz15u7cA
        dTzRu/RuzDbdTwDDstm1UYd6ItnZRHuw3JaNR2BYJrVr+V9IdDDRcJ634V4CGJbFrodsqLWJjiUaoehN
        N4g+i8ZWWcCwDCYE0cnSievqO5VoVGQMxSehMVYGMCw6J6x+WTpuU6IjicZqfSWo/hUaa0UHwyKrXeBT
        hmfqUb5sKOMFQzAsKn2Th3QUP/OPnP6IxI9JI7emLYiPQ2OvqGBYRG2h+pR00KpEh9Eu7zi+elR0VMJu
        5z96nhrf29v7Ganbl0Xbjh07Tr5j8fNf/NrMRe2urwLHj5bKv+FOx9hKvRv04LFXZDAsmoGHbXK/PmSN
        ntDXR4/pM9mXiC7xptjTa5tYIqY/9Owbpzhh/B35Grxfot4rE7z5H5U6wfFYJDAskvZp1Q9Jh3D3nt29
        I+Yuf2X1F6RGt4teMZbX0s3b+tr1s/3l620e9PUpiJ5tnXbP4VIjOC6LAoZFcfKszgOlM5bUd47VVl54
        4wNnSH1uFDuFiVd8S8+Tfy1f+6HE97KavLv6hd47UuoDx2cRwLAIpPD7yipcRR1jrTD+zWMvrNZP1P29
        MP1a19fff1pt8xT8/S0k746U3lRG6gPHad7BsAik+N9PdobN3ECt+P0bG8+X2mwSab12iCm8ozLBj66V
        usBxmncwzDv9uGjYEfZ6bcXr6y+W2sgP6dRf74hz5HvGiWOw3delLnC85hkM86x2fT8383jPtp8sXvE1
        qc3bolmvzU+9vPZv9G464HhspZ8MfbzUBo7bvIJhXp06XR0mReadfYNMvm5Bh9TmadHs1xNnzJh/Hjom
        iz3Xdk3PB6Q2cPzmEQzzSP4Yp0+4gKJbS3/u37Fz51SpTyavnf393xi4wAgcm8Xm6bEq5dlt/OYVDPNI
        CvvtRKGt950fL9UX96R50m+41+tnze75O3RsNpOF+ZtSGziO8waGeeMG3X8hhd2SLLTlXpOf/rOkPpm+
        +vr69MeA1xPHZrvNjtd9rJQHjuc8gWGe6Ec5OaF6HBTZbrt+9fS8yPrVo5/LD4/RbsuOn7tsP6kPHNd5
        AcM8cYN4Biiu9WZ2P3aW1CcPr21n37joDHSMtpOPAvr8DBzXeQHDvKjd288HddbrXb9thyM1ysXr1bWb
        J8kx6fsP0LHabIfI9a8GYZgH+hprfcNFoqAk9AMupUb6wpO8vC6V43opeZw04Bn91GmpERznWYNhHjhh
        7IFi0oCoKjXSl/3m5SUf0+IH8LGSvptSagTHedZgmLW2oDpeCqffPsGC2k4G1F1Sp8kiL6+b5ZjuRsdK
        A3r1b7KkTnC8ZwmGWXN89SAoIr3nv6ROE0VeXnPdUP03OE56T4/UCY73LMEwSxU/PgsUj3Z3j9TqSyIv
        r1m8NXt4rh//rdQKjvuswDAr+mSJFIrX+g9Db0Qh9TpG5OX1LTeIHkPHSrt5Tl/XIvWC4z8LMMyKvI28
        HBSN6q2Ueh0kcvHq6+8/XY7p7cQxElAJom9JyeD4zwIMs+B4Cz4sBdqQLBjtQce8o6Rua0XWr3dmdi/X
        24Xh46SkdXnaSxCGWXB8JZ8jYcEI8dV5UrdFIuvXU06oLoHHSJC+ulXqBudBs8Gw2Zyw+2NSmN5koWgo
        8QKp3eUi69d3nSBahI+R9mBrXh4/DsNmk59mPwRFoqHtWPTEG+1SvyxfffN+9bu/1MeSODYaVjRb6gfn
        QzPBsJn4078ht0gNY5HV6y7Xj28Ax0XD21o7jwPnRbPAsJnkp//NoDg0Mjuvm7dcPwNgtWj2q3fe0hfa
        5Bj0Xnjo2GgYlUD9QOoI50WzwLBZamf+udFHY557cdUG/VFAP9araa+dO3dOle+9MHEsNDqbsv6NAAyb
        hQ+ZMOb+Tdu3nys1NfUkoOFeD0+aXg3AcdCoxVdLPeH8aAYYNkOL13mwFICP8jZn4fotvfoGoa0izdfy
        C25arG//RcdAo7fauW7BH0hd4TxJGwybwQ2ifwbFoAa4geravK1vktQ3rY1Cn7nijl/qfuNJW4NcP7pI
        agvnSdpg2Az6OXaoGNSo+N5X17+tn/tv+sTgoovnPniFfA/u0GSYvo9C6gvnSdpgmLbaVl+wGGRAqB6/
        pedp/ZDQX4lGX2+u3th7VXsY/w/8XmRKJluHwTBtMkB/BApAZm2bOHX+tPVbevXVgqN9ctAGcffGrdun
        fPXaHv08hjWJr02m+epmqTmcL2mCYZpOm9F1iDSYd441jz7R+v2bFjz5lb7+fn0/ut6eaqaYO4i+Nv0y
        8ZVt/f1HtwfV8RVfXSP/7o1BX4fStSGLk4EwTJM+4QEaT82x0gmi/9PbVddOwl6s6f+tM/nf/ys46TNS
        CWK9zyOcN2mBYZq4eSTRHjV92zAYpqXidX1EGrkz0Wgi2qWvdWrXEWjupAWGaXFCdRloNBG9K1T6ga9w
        /qQBhmmRBv68rsFENNj9aO6kBYZp0G9tpHF8+080tB0tXvcH0RxKAwzT4PrRBaCxRJTg+vE5aA6lAYZp
        cHglGdHIhOoONIfSAEPTWrzF+0rDeOcf0Qi4gXrL87y90VwyDYamOR1K7xsHG0tE9Sod8QloLpkGQ9Nk
        RfseaiQR7Ul8BZpLpsHQNG4bTTQ68kPzPjSXTIOhScfPXbafNGhTsoFENKQNkzs790FzyiQYmqQ/y4DG
        EdEw2oLqeDSnTIKhSfJW5puocUQ0jFDpW7ThvDIFhibx9/9EYxXdieaUSTA0SRryXH3DiGgEnkFzyiQY
        mjLJ6z5IGsFNJNPzkujMknzEWyF/o2Ojxu1on1M9AM0tU2BoyoSg+0TQKDLkpvlP/kLq/GKW/uXWh29F
        x0ZmpH0iEIamOL6aghpFZvx48YqlUudMX5ff/shP0LGRGW4Q6Sc+wfllAgxNkQVgFmoUmcEFwAJ+dK2U
        Gc4vE2BoijQgrmsQGcMFoPzcQHVJmeH8MgGGpkgDnk42iMzhAmCFJ6TMcH6ZAEMT5I9xcvB89HeKuABY
        YaOUuW5+mQJDE2pbgKEGkSFcAOzQOu2ew6XUcJ41CoYmtHVUv4gaQ+ZwAbBDmnsDwNCECaE6EzWGzOEC
        YAfXj0+XUsN51igYmlAJ439CjSFzuADYoRLE/yilhvOsUTA0oRKoq1BjyBwuAHZwQ6Wf8AznWaNgaIIb
        xNejxpA5XAAskeLFQDA0wQliDoyUcQGwg3ycvlVKDedZo2BogiwA3agxZA4XAFvE90qp4TxrFAxNkAPv
        qW8ImcQFwA5pbhAKQxMcXz2IGkPmcAGwQyVQi6XUcJ41CoYmOH60FDWGzOECYI0lUmo4zxoFQxPcIHoM
        NIQM4gJgjWVSajjPGgVDE+Sgn0w0ggzjAmCJUP1WSg3nWaNgaII+aNgYMoYLgDVSuyUYhibIAvBr0BAy
        iAuAJXz1qJQazrNGwdAEngRMHxcAS/jqYSk1nGeNgqEJThA/ABtDxnABsMb9Umo4zxoFQxPkoBcmGkGG
        cQGwQzEvBOKlwKnjAmCLAl4KLKvWbbgxZAoXAEuE6kdSajjPGgVDEyq+mgkbQ8ZwAbCDG8QzpNRwnjUK
        hiY4YXQlagyZwwXADpUg+jcpNZxnjYKhCa4fXYQaQ+ZwAbCEr6ZIqeE8axQMTeCmoOnjAmCHQm4K6nZE
        X0CNIXO4ANjB9bo/L6WG86xRMDShfVr1Q6gxZA4XADucOl0dJqWG86xRMDRFDv7tZGPIHC4AVlgnZYbz
        ywQYmiIHz1uCU8QFwAKhelzKDOeXCTA0xQmiCDaKjOACYIP0rgLUYGiK46tZuFFkAhcAC6T4TAANhqbI
        AnAebBQZwQXAAn50tpQZzi8TYGhKW1AdDxtFRnABKL+2ID5OygznlwkwNKV9TvUAacT2ZKPIDC4Apdd7
        /Nxl+0mZ4fwyAYYmSSP4m4CUcAEouTD+jZQYzitTYGiSE0R3wsZRw7gAlFsljG6XEsN5ZQoMTXJCdQlq
        HDWOC0C56RvqpMRwXpkCQ5MmeF2fQY2jxnEBKLd2r/rnUmI4r0yBoUme5+0tjVmfbBw1jgtAqa2WCTRO
        Slw3p0yCoWlOEC8ADaQGcQEosyiS8sL5ZBIMTXMD9T3cSGoEF4Ayi6+Q8sL5ZBIMTat0xCfgRlIjuACU
        lz53JuWF88kkGJomf4yTRq1MNpIawwWgtF7Vc0bKu9s8SgMM0yBvaThQDOMCUFIpbgOeBMM0SMO+XtdQ
        aggXgJIKo69KaeE8Mg2GaWidds/h0rgddY2lMeMCUErb09wCLAmGaZHGzU80lhrABaCMmvPrv3fBMC3S
        wAvrG0xjxQWgfFw/PkfKCudPGmCYlhbv3kOlkb3JRtPYcAEona2nzeg6RMoK508aYJimSqAUaDiNAReA
        0pknJYXzJi0wTJMbROeChtMYcAEoFzeI/15KCudNWmCYphZv8fuksWuSjafR4wJQKqsme537S0nhvEkL
        DNPmBNFsUAAaJS4A5SE//a+XcsL5kiYYps3x1KdREWh0uACUxjuO132slBPOlzTBsBkcP1oKCkGjwAWg
        NB6SUsJ5kjYYNoPrRxeAQtAocAEoB31iXEoJ50naYNgMertjafwryWLQyHEBKIWXWrzF+0op4TxJGwyb
        xQmjK0FBaIS4AJTCt6WMcH40AwybRd/0IAXgI8THiAtA4a1v96rvlzLC+dEMMGwmx1c3g8LQCHABKDhf
        zZESwnnRLDBspjav+0+kGNvqikPD4gJQaJvdqff9kZQQzotmgWGz6ZUQFIiGwQWguCq+minlg/OhmWDY
        bBO9+EgpyuZkkWhoXAAKa2OL1/1BKR+cD80Ewyy4QTwDFIqGwAWgoHzVIaWD86DZYJgFx1vwYSnOhrpi
        0R5xASikdXp7PCkdnAfNBsOsuKH6V1Aw2gMuAEUUf0PKBsd/FmCYFX07pBuoFbhwlMQFoGBC9dssr/pD
        YJgl149Ph8WjOlwACsavtkvJ4LjPCgyz5vjqQVhA2g0XgELpkXLB8Z4lGGat1Ys/KQXbkiggJXABKIxN
        E7z5H5VywfGeJRjmAW8UGh4XgMLI9IafocAwD/TJEincskQhaRAuAAXgq0cnd3buI6WC4zxrMMwLN4g+
        K0XcXldUGsAFIPe2N+sx32MFwzyp+OoaUFgSXAByLkdX/O0JDPOk9lFgSV1xiQtAjlUCtdjzvL2lRHBc
        5wUM86bVUx+XovIy4QQuALm11umYd5SUB47nPIFhHvGJQvW4AORUE5/v3ygY5pW8rboLFtxSXAByKFR3
        SFng+M0jGObVwGPFQvVrWHgLcQHIGV89qseolAWO3zyCYZ5N7Ij/VIq9uq74FuICkB9uoN7S29tJSeC4
        zSsY5p3jxxUpel+yE2zDBSA3+ip+1CrlgOM1z2BYBJVA+aAjrMIFIC/iq6UUcJzmHQyLQj5zWb2lOBeA
        XLhJygDHZxHAsChqjxdbmOgQa3AByFoU5fk6/5GAYZHoJ6tIZzxR3znlxwUgU8tPm9F1iJQAjsuigGHR
        tIfVo6VDXkt0UOlxAcjMK3m9v3+0YFhErtd1jHSMVYvAuXPuv1va/qUsnXntAqse6lIJ1ItF/HXfnsCw
        qCpe/DnppLXJTiuxXqHbm6WtAh1bGa1pC+Lj0NgrKhgWmRPEJ0lHbUx0HFGjNkwIuk9EY67IYFh0bUF1
        vHTYqkQHEo3VKv3uEo21ooNhGbSF6lPScdadGCTjXnW87mPRGCsDGJbFrt2F45dBpxKNxAtlOdu/JzAs
        k0oYfUI68neJjiUakn5Clf71MhpTZQLDstEXbDhBVEUdTZRUCZQqw0U+IwHDMqrtLXhTsrOJBpPJ/4Oi
        X947GjAsK/ljXCVU35WOfifZ8WS9nfphNGjclBkMy67NV650+JrEACBrRW86HbG+shGOlzKDoQ1q9w9Y
        eRMRDeKrR4uyg28aYGgLfSehG6guODCo9OTz/t22nOzbExjaprbl+NvJAUKlta7iq8loLNgGhjZywu6P
        ycB4KDFQqHx+rjeWRWPARjC0Vfuc6gEyQK4T1m84WkLSp9H0yV7n/qjvbQVD2+knujq++iUYRFREfrTU
        8dSnUV/bDobUv5d+sKMMnosFby0uLv08yYulQ8ehPiYuAMPadS9BvCAxsCj/Yhuu5W8UDKme66tTZFAt
        TwwyyptQPT4hjFpQH1I9GBKmPxbUfmW4sm7gUdbe0H1ThGfy5wkMaWiud98fuoGaKoOO1w5kb6MTROGp
        09VhqK9oaDCkkdFXkbmhulwG4frEoKT0rdO1b/E6D0Z9QyMDQxqdiV58pAxIff2APuuMBiuZs94N4hmt
        U7uOQH1BowNDGht9IdGucwTRs2DgUmOe0bXVNUa1p7GBITVGP7PQ9eNzZNA+khjENHpLHD86W9cU1Zoa
        A0MyR19HUPHVNTKQuU35yK3SNdO1QzUlc2BI5umTVY6vpriB+pkMcN5rUE/XZKHrRxdM8roPQjUk82BI
        6Wrx7j20dq4gkkG/fdAksE2vroGuha4JqhWlC4bUPPo3CJUgPl8mw0/l3cFbiQlSRvJRKLpTT3qeyc8e
        DCkb+io2/fw5J4ivlsXgPpksZbgRSf9qdH4lUFdVOuITeKVevsCQ8kFvTz3wnMNQXSaTSL9DWCF/5/n8
        gb7nXv8KVI41ulQ/T8+mLbaLCIaUX/oE2cC7BH1C0Y9vkMkWy0/Xp+TvLbVJ2Axbat8zrh3Dhfqn+8mz
        Og9Ex0z5BUMqJv2ZWj8efUKoznT96CK9z33FVzPlncNtknfLRO0ZoDfICNSy3ezKdv3/8t/qf6P/rf4a
        +mvpr6m/Nj+3lwsMicgOMCQiO8CQiOwAQyKyAwyJyA4wJCI7wJCI7ABDIrIDDInIDjAkIjvAkIjsAEMi
        sgMMicgOMCQiO8CQiOwAQyKyAwyJyA4wJCI7wJCI7ABDIrIDDInIDjAkIhv07/X/1mwVLCDFhGsAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>